{"version":3,"sources":["webpack://SPA-JS/./src/templates/Header.js","webpack://SPA-JS/./src/utils/getData.js","webpack://SPA-JS/./src/utils/getHash.js","webpack://SPA-JS/./src/pages/Error404.js","webpack://SPA-JS/./src/routes/index.js","webpack://SPA-JS/./src/pages/Home.js","webpack://SPA-JS/./src/pages/Character.js","webpack://SPA-JS/./src/pages/About.js","webpack://SPA-JS/./src/utils/resolveRoutes.js","webpack://SPA-JS/./src/index.js"],"names":["API","async","API_URL","id","response","fetch","json","error","console","log","location","hash","slice","toLocaleLowerCase","split","routes","getData","results","map","character","image","name","join","getHash","episode","length","status","species","gender","origin","header","document","getElementById","content","innerHTML","route","resolveRoutes","render","Error404","window","addEventListener","router"],"mappings":"mBAEA,MCFMA,EAAM,6CAaZ,EAXgBC,UACf,MAAMC,EAAUC,EAAM,GAAEH,IAAMG,IAAOH,EACrC,IACC,MAAMI,QAAiBC,MAAMH,GAE7B,aADmBE,EAASE,OAE3B,MAAOC,GACRC,QAAQC,IAAI,cAAeF,KCA7B,EATgB,IACfG,SAASC,KAAKC,MAAM,GAAGC,oBAAoBC,MAAM,KAAK,IAAM,ICU7D,EATiB,IACF,yECKTC,EAAS,CACd,ICNYd,SAEE,4CADWe,KAGXC,QAAQC,KAAIC,GAAc,iEAExBA,EAAUhB,4BACXgB,EAAUC,eAAeD,EAAUE,wBACzCF,EAAUE,oDAGfC,KAAK,sBDJT,OENiBrB,UACjB,MAAME,EAAKoB,IACLJ,QAAkBH,EAAQb,GAkBhC,MAjBc,oGAGCgB,EAAUC,eAAeD,EAAUE,yBACxCF,EAAUE,qHAIKF,EAAUK,QAAQC,iDACpBN,EAAUO,kDACTP,EAAUQ,kDACXR,EAAUS,iDACVT,EAAUU,OAAOR,gDAChBF,EAAUT,SAASW,+CFT3C,SGRapB,UACb,MAAMkB,QAAkBH,IAkBxB,MAjBc,kGAGCG,EAAUC,eAAeD,EAAUE,yBACxCF,EAAUE,qHAIKF,EAAUK,QAAQC,iDACpBN,EAAUO,kDACTP,EAAUQ,kDACXR,EAAUS,iDACVT,EAAUU,OAAOR,gDAChBF,EAAUT,SAASW,gDHO5C,EAXepB,UACd,MAAM6B,EAAiBC,SAASC,eAAe,UACzCC,EAAkBF,SAASC,eAAe,WAEhDF,EAAOI,eJfO,+SIgBd,IAAIvB,EAAOY,IACPY,OIpBkBA,IAClBA,EAAMV,QAAS,EACS,MAAVU,EAAgBA,EAAQ,OAGlC,IAAGA,IJeOC,CAAczB,GAC5B0B,EAAStB,EAAOoB,GAASpB,EAAOoB,GAASG,EAC7CL,EAAQC,gBAAkBG,KKpB3BE,OAAOC,iBAAiB,OAAQC,GAChCF,OAAOC,iBAAiB,aAAcC,I","file":"main.js","sourcesContent":["import \"../styles/main.css\"\n\nconst Header = () => {\n\tconst view = `\n\t\t<div class=\"Header-main\">\n\t\t\t<div class=\"Header-logo\">\n\t\t\t\t<h1>\n\t\t\t\t\t<a href=\"/SPA-JS/\">\n\t\t\t\t\t\t100tifi.co\n\t\t\t\t\t</a>\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t\t<div class=\"Header-nav\">\n\t\t\t\t<a href=\"#/about/\">\n\t\t\t\t\tAbout\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t`\n\treturn view\n}\n\nexport default Header","const API = \"https://rickandmortyapi.com/api/character/\"\n\nconst getData = async (id) => {\n\tconst API_URL = id ? `${API}${id}` : API\n\ttry {\n\t\tconst response = await fetch(API_URL)\n\t\tconst data = await response.json()\n\t\treturn data\n\t} catch (error) {\n\t\tconsole.log(\"Fetch Error\", error)\n\t}\n}\n\nexport default getData","const getHash = () =>\n\tlocation.hash.slice(1).toLocaleLowerCase().split(\"/\")[1] || \"/\"\n\t// location.hash trae el fragmento de la url a partir de donde encuentre un #. En este caso traería #/1/\n\t// .slice(1) corta la url y muestra a partir del primer elemento. En este Caso el resultado es /1/\n\t// .toLocaleLowerCase() convierte a minúscula la cadena\n\t// .split(’/’) separa la cadena en un array, y elimina el / quedando un espacio vacio Ej [’’, ‘1’ ,’’]\n\t// [1] trae el primer elemento del split anterior que en este caso es 1 (representa la id 1)\n\n\nexport default getHash","import \"../styles/main.css\"\n\nconst Error404 = () => {\n\tconst view = `\n\t\t<div class=\"Error404\">\n\t\t\t<h2>Error 404</h2>\n\t\t</div>\n\t`\n\treturn view\n}\n\nexport default Error404","import Header from \"../templates/Header\"\nimport Home from \"../pages/Home\"\nimport Charater from \"../pages/Character\"\nimport About from \"../pages/About\"\nimport Error404 from \"../pages/Error404\"\nimport getHash from \"../utils/getHash\"\nimport resolveRoutes from \"../utils/resolveRoutes\"\n\nconst routes = {\n\t\"/\": Home,\n\t\"/:id\": Charater,\n\t\"/about\": About,\n}\n\nconst router = async () => {\n\tconst header = null || document.getElementById(\"header\")\n\tconst content = null || document.getElementById(\"content\")\n\n\theader.innerHTML = await Header()\n\tlet hash = getHash()\n\tlet route = await resolveRoutes(hash)\n\tlet render = routes[route] ? routes[route] : Error404\n\tcontent.innerHTML = await render()\n}\n\nexport default router","import getData from \"../utils/getData\"\nimport \"../styles/main.css\"\n\nconst Home = async () => {\n\tconst characters = await getData()\n\tconst view = `\n\t<div class=\"Characters\">\n\t\t${characters.results.map(character => `\n\t\t\t<article class=\"Characters-item\">\n\t\t\t\t<a href=\"#/${character.id}/\">\n\t\t\t\t<img src=\"${character.image}\" alt=\"${character.name}\"/>\n\t\t\t\t<h2>${character.name}</h2>\n\t\t\t\t</a>\n\t\t\t</article>\n\t\t`).join(\"\")}\n\n\t</div>\n\t`\n\treturn view\n}\n\nexport default Home","import getHash from \"../utils/getHash\"\nimport getData from \"../utils/getData\"\nimport \"../styles/main.css\"\n\nconst Character = async () => {\n\tconst id = getHash()\n\tconst character = await getData(id)\n\tconst view = `\n\t\t<div class=\"Characters-inner\">\n\t\t\t<article class=\"Characters-card\">\n\t\t\t\t<img src=\"${character.image}\" alt=\"${character.name}\">\n\t\t\t\t\t<h2>${character.name}</h2>\n\t\t\t\t</img>\n\t\t\t</article>\n\t\t\t<article class=\"Characters-card\">\n\t\t\t\t<h3>Episodes: <span>${character.episode.length}</span></h3>\n\t\t\t\t<h3>Status: <span>${character.status}</span></h3>\n\t\t\t\t<h3>Species: <span>${character.species}</span></h3>\n\t\t\t\t<h3>Gender: <span>${character.gender}</span></h3>\n\t\t\t\t<h3>Origin: <span>${character.origin.name}</span></h3>\n\t\t\t\t<h3>Last location: ${character.location.name}</h3>\n\t\t\t</article>\n\t\t</div>\n\t`\n\treturn view\n}\n\nexport default Character","import getData from \"../utils/getData\"\nimport \"../styles/main.css\"\n\nconst About = async () => {\n\tconst character = await getData()\n\tconst view = `\n\t\t<div class=\"Characters-outer\">\n\t\t<article class=\"Characters-card\">\n\t\t\t\t<img src=\"${character.image}\" alt=\"${character.name}\">\n\t\t\t\t\t<h2>${character.name}</h2>\n\t\t\t\t</img>\n\t\t\t</article>\n\t\t\t<article class=\"Characters-card\">\n\t\t\t\t<h3>Episodes: <span>${character.episode.length}</span></h3>\n\t\t\t\t<h3>Status: <span>${character.status}</span></h3>\n\t\t\t\t<h3>Species: <span>${character.species}</span></h3>\n\t\t\t\t<h3>Gender: <span>${character.gender}</span></h3>\n\t\t\t\t<h3>Origin: <span>${character.origin.name}</span></h3>\n\t\t\t\t<h3>Last location: ${character.location.name}</h3>\n\t\t\t</article>\n\t\t</div>\n\t`\n\treturn view\n}\n\nexport default About","const resolveRoutes = (route) => {\n\tif (route.length <=3) {\n\t\tlet validRoute = route === \"/\" ? route : \"/:id\"\n\t\treturn validRoute\n\t}\n\treturn `/${route}`\n}\n\nexport default resolveRoutes","import router from \"./routes\"\n\nwindow.addEventListener(\"load\", router)\nwindow.addEventListener(\"hashchange\", router)"],"sourceRoot":""}